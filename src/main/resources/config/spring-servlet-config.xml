<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:task="http://www.springframework.org/schema/task"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc
             http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!--注解开发驱动-->
    <context:annotation-config/>

    <!--注解开发驱动-->
    <mvc:annotation-driven/>

    <!-- 扫描com.lyb包里下的所有class文件，配置注解的类全都装入容器中进行管理 -->
    <context:component-scan base-package="com.lyb"/>

    <!--mybatis 数据库配置-->
    <util:properties id="dbConfig" location="classpath:/config/jdbc.properties"></util:properties>
    <!-- 配置数据源 -->
    <beans:bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <beans:property name="url" value="${dbConfig.url}"/>
        <beans:property name="username" value="${dbConfig.username}"/>
        <beans:property name="password" value="${dbConfig.password}"/>
    </beans:bean>

    <!-- 配置mybatis的sqlSessionFactory -->
    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mappers.xml文件 -->
        <beans:property name="mapperLocations" value="classpath:mappers/*.xml"></beans:property>
        <!-- mybatis配置文件 -->
        <beans:property name="configLocation" value="classpath:/config/spring-mybatis-config.xml"></beans:property>
    </beans:bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <beans:property name="basePackage" value="com.lyb.dao" />
        <beans:property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></beans:property>
    </beans:bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <beans:bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>

    <!-- 配置事务通知属性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 定义事务传播属性 -->
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="edit*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="new*" propagation="REQUIRED" />
            <tx:method name="set*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="change*" propagation="REQUIRED" />
            <tx:method name="check*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="load*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <!-- 配置事务切面 -->
    <aop:config>
        <aop:pointcut id="serviceOperation"
                      expression="execution(* com.lyb.mysite.service.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
    </aop:config>

    <!--freemarker 相关-->
    <beans:bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <beans:property name="templateLoaderPath" value="/WEB-INF/views/"/>
        <beans:property name="defaultEncoding" value="utf-8"/>
        <beans:property name="freemarkerSettings">
            <beans:props>
                <beans:prop key="template_update_delay">10</beans:prop>
                <beans:prop key="locale">zh_CN</beans:prop>
                <beans:prop key="datetime_format">yyyy-MM-dd</beans:prop>
                <beans:prop key="date_format">yyyy-MM-dd</beans:prop>
                <beans:prop key="number_format">#.##</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
    <!-- FreeMarker视图解析   如返回student。。在这里配置后缀名ftl和视图解析器。。-->
    <beans:bean id="viewResolver"
                class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView">
        </beans:property>
        <beans:property name="suffix" value=".html"/>
        <beans:property name="contentType" value="text/html;charset=utf-8"/>
        <beans:property name="exposeRequestAttributes" value="true"/>
        <beans:property name="exposeSessionAttributes" value="true"/>
        <beans:property name="exposeSpringMacroHelpers" value="true"/>
    </beans:bean>

    <!--jack解析器配置-->
    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="ignoreDefaultModelOnRedirect" value="true"/>
        <beans:property name="messageConverters">
            <util:list>
                <beans:bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <beans:ref bean="mappingJacksonHttpMessageConverter"/>
            </util:list>
        </beans:property>
    </beans:bean>


    <beans:bean id="mappingJacksonHttpMessageConverter"
                class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <beans:property name="supportedMediaTypes">
            <beans:list>
                <beans:value>application/json;charset=UTF-8</beans:value>
                <beans:value>text/plain;charset=UTF-8</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>

    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </beans:bean>

</beans:beans>
